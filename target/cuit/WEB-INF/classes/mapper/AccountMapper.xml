<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.cuit.dao.AccountMapper">
  <resultMap id="BaseResultMap" type="cn.edu.cuit.entity.Account">
    <id column="acid" jdbcType="INTEGER" property="acid" />
    <result column="tid" jdbcType="INTEGER" property="tid" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="IEType" jdbcType="INTEGER" property="ietype" />
    <result column="date" jdbcType="TIMESTAMP" property="date" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="is_expose" jdbcType="INTEGER" property="isExpose" />
    <result column="is_avaliable" jdbcType="INTEGER" property="isAvaliable" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    acid, tid, uid, IEType, date, amount, remarks, is_expose, is_avaliable
  </sql>
  <select id="selectByExample" parameterType="cn.edu.cuit.entity.AccountExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from account
    where acid = #{acid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from account
    where acid = #{acid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.edu.cuit.entity.AccountExample">
    delete from account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.cuit.entity.Account">
    insert into account (acid, tid, uid, 
      IEType, date, amount, 
      remarks, is_expose, is_avaliable
      )
    values (#{acid,jdbcType=INTEGER}, #{tid,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, 
      #{ietype,jdbcType=INTEGER}, #{date,jdbcType=TIMESTAMP}, #{amount,jdbcType=DECIMAL}, 
      #{remarks,jdbcType=VARCHAR}, #{isExpose,jdbcType=INTEGER}, #{isAvaliable,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.cuit.entity.Account">
    insert into account
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="acid != null">
        acid,
      </if>
      <if test="tid != null">
        tid,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="ietype != null">
        IEType,
      </if>
      <if test="date != null">
        date,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="isExpose != null">
        is_expose,
      </if>
      <if test="isAvaliable != null">
        is_avaliable,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="acid != null">
        #{acid,jdbcType=INTEGER},
      </if>
      <if test="tid != null">
        #{tid,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="ietype != null">
        #{ietype,jdbcType=INTEGER},
      </if>
      <if test="date != null">
        #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="isExpose != null">
        #{isExpose,jdbcType=INTEGER},
      </if>
      <if test="isAvaliable != null">
        #{isAvaliable,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.cuit.entity.AccountExample" resultType="java.lang.Long">
    select count(*) from account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update account
    <set>
      <if test="record.acid != null">
        acid = #{record.acid,jdbcType=INTEGER},
      </if>
      <if test="record.tid != null">
        tid = #{record.tid,jdbcType=INTEGER},
      </if>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.ietype != null">
        IEType = #{record.ietype,jdbcType=INTEGER},
      </if>
      <if test="record.date != null">
        date = #{record.date,jdbcType=TIMESTAMP},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.remarks != null">
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.isExpose != null">
        is_expose = #{record.isExpose,jdbcType=INTEGER},
      </if>
      <if test="record.isAvaliable != null">
        is_avaliable = #{record.isAvaliable,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update account
    set acid = #{record.acid,jdbcType=INTEGER},
      tid = #{record.tid,jdbcType=INTEGER},
      uid = #{record.uid,jdbcType=INTEGER},
      IEType = #{record.ietype,jdbcType=INTEGER},
      date = #{record.date,jdbcType=TIMESTAMP},
      amount = #{record.amount,jdbcType=DECIMAL},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      is_expose = #{record.isExpose,jdbcType=INTEGER},
      is_avaliable = #{record.isAvaliable,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.cuit.entity.Account">
    update account
    <set>
      <if test="tid != null">
        tid = #{tid,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="ietype != null">
        IEType = #{ietype,jdbcType=INTEGER},
      </if>
      <if test="date != null">
        date = #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="isExpose != null">
        is_expose = #{isExpose,jdbcType=INTEGER},
      </if>
      <if test="isAvaliable != null">
        is_avaliable = #{isAvaliable,jdbcType=INTEGER},
      </if>
    </set>
    where acid = #{acid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.cuit.entity.Account">
    update account
    set tid = #{tid,jdbcType=INTEGER},
      uid = #{uid,jdbcType=INTEGER},
      IEType = #{ietype,jdbcType=INTEGER},
      date = #{date,jdbcType=TIMESTAMP},
      amount = #{amount,jdbcType=DECIMAL},
      remarks = #{remarks,jdbcType=VARCHAR},
      is_expose = #{isExpose,jdbcType=INTEGER},
      is_avaliable = #{isAvaliable,jdbcType=INTEGER}
    where acid = #{acid,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="cn.edu.cuit.entity.AccountExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>